# -*- coding: utf-8 -*-


from lib.l0_importBiominers import L0ImportBiominers
from lib.l1_importOthers import L1ImportOthers
from lib.l2_mergeTogether import L2MergeTogether


import click
@click.group()
def cli():
    pass


@cli.command()
@click.argument('notion_fn')
@click.argument('fn_biominers')
def l0_importBiominers(notion_fn, fn_biominers):
    """
    Original notebook is:
        t11-shadi-collect notion tables of total tests.ipynb
        https://colab.research.google.com/drive/1y0DWBLeLoKfLCw0G0E5QeXa4OdRv228Z

    Read all the data from the notion.so tables and dump into a csv

    Requires the notion.so unofficial API key
    """

    # notion_fn="notion-shadiakiki1986-token_v2.txt"
    # fn_biominers = "multiple-biominers-gitrepo.csv"
    factory = L0ImportBiominers()
    factory.get_notion_token(notion_fn)
    factory.fetch_tables()
    factory.to_csv(fn_biominers)


@cli.command()
@click.argument('dir_gitrepo')
def l1_importOthers(dir_gitrepo):
  """
  Original notebook at
      t11b-shadi-collect biominers and non-biominers sources.ipynb
      https://colab.research.google.com/drive/1yN-HGiOJzMDXnaimHZ96yUBT7bU38A94

  Read data from other non-biominer sources
  """

  factory = L1ImportOthers(dir_gitrepo)

  factory.get_jhu_conf_deaths()
  factory.get_owid_roser()
  factory.get_owid_ortiz()
  factory.get_covidtracking_usa()
  factory.get_wikipedia()
  factory.get_worldometers()
  factory.get_biominers()
  factory.merge_all()
  factory.aggregate_and_to_csv()
  factory.one_field()
  factory.to_csv_subcols()
  factory.to_csv_all()


@cli.command()
@click.argument('dir_gitrepo')
def l2_mergeTogether(dir_gitrepo):
  """t11c2-shadi-merge with confirmed cases and population.ipynb

  Automatically generated by Colaboratory.

  Original file is located at
    https://colab.research.google.com/drive/1XeMityBlecPV8kyatsoIy82Zml8qyr8Y
  """
  factory = L2MergeTogether(dir_gitrepo)
  factory.read_confirmed_cases()
  factory.read_totaltests()
  factory.merge_conf_total()
  factory.merge_country_meta()
  factory.export_count_per_source()
  factory.add_supplementary_stats()
  factory.to_csv_historical()
  factory.to_csv_latestOnly()


if __name__ == '__main__':
    cli()
